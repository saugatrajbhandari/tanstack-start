{"version":3,"file":"router-hmr-plugin.cjs","sources":["../../../src/core/router-hmr-plugin.ts"],"sourcesContent":["import { generateFromAst, logDiff, parseAst } from '@tanstack/router-utils'\nimport { getConfig } from './config'\nimport { routeHmrStatement } from './route-hmr-statement'\nimport { debug, fileIsInRoutesDirectory } from './utils'\nimport type { Config } from './config'\nimport type { UnpluginFactory } from 'unplugin'\n\n/**\n * This plugin adds HMR support for file routes.\n * It is only added to the composed plugin in dev when autoCodeSplitting is disabled, since the code splitting plugin\n * handles HMR for code-split routes itself.\n */\nexport const unpluginRouterHmrFactory: UnpluginFactory<\n  Partial<Config> | undefined\n> = (options = {}) => {\n  let ROOT: string = process.cwd()\n  let userConfig = options as Config\n\n  return {\n    name: 'router-hmr-plugin',\n    enforce: 'pre',\n\n    transform(code, id) {\n      if (!code.includes('export const Route = createFileRoute(')) {\n        return null\n      }\n\n      if (debug) console.info('Adding HMR handling to route ', id)\n\n      const ast = parseAst({ code, filename: id, root: ROOT })\n      ast.program.body.push(routeHmrStatement)\n      const result = generateFromAst(ast, {\n        sourceMaps: true,\n        filename: id,\n        sourceFileName: id,\n      })\n      if (debug) {\n        logDiff(code, result.code)\n        console.log('Output:\\n', result.code + '\\n\\n')\n      }\n      return result\n    },\n\n    transformInclude(id) {\n      return fileIsInRoutesDirectory(id, userConfig.routesDirectory)\n    },\n\n    vite: {\n      configResolved(config) {\n        ROOT = config.root\n        config.mode\n\n        userConfig = getConfig(options, ROOT)\n      },\n    },\n\n    rspack() {\n      ROOT = process.cwd()\n      userConfig = getConfig(options, ROOT)\n    },\n\n    webpack() {\n      ROOT = process.cwd()\n      userConfig = getConfig(options, ROOT)\n    },\n  }\n}\n"],"names":["debug","parseAst","routeHmrStatement","generateFromAst","logDiff","fileIsInRoutesDirectory","config","getConfig"],"mappings":";;;;;;AAYO,MAAM,2BAET,CAAC,UAAU,OAAO;AAChB,MAAA,OAAe,QAAQ,IAAI;AAC/B,MAAI,aAAa;AAEV,SAAA;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IAET,UAAU,MAAM,IAAI;AAClB,UAAI,CAAC,KAAK,SAAS,uCAAuC,GAAG;AACpD,eAAA;AAAA,MAAA;AAGT,UAAIA,MAAO,MAAA,SAAQ,KAAK,iCAAiC,EAAE;AAErD,YAAA,MAAMC,qBAAS,EAAE,MAAM,UAAU,IAAI,MAAM,MAAM;AACnD,UAAA,QAAQ,KAAK,KAAKC,kBAAAA,iBAAiB;AACjC,YAAA,SAASC,4BAAgB,KAAK;AAAA,QAClC,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,gBAAgB;AAAA,MAAA,CACjB;AACD,UAAIH,aAAO;AACDI,4BAAA,MAAM,OAAO,IAAI;AACzB,gBAAQ,IAAI,aAAa,OAAO,OAAO,MAAM;AAAA,MAAA;AAExC,aAAA;AAAA,IACT;AAAA,IAEA,iBAAiB,IAAI;AACZ,aAAAC,8BAAwB,IAAI,WAAW,eAAe;AAAA,IAC/D;AAAA,IAEA,MAAM;AAAA,MACJ,eAAeC,UAAQ;AACrB,eAAOA,SAAO;AACPA,iBAAA;AAEM,qBAAAC,OAAAA,UAAU,SAAS,IAAI;AAAA,MAAA;AAAA,IAExC;AAAA,IAEA,SAAS;AACP,aAAO,QAAQ,IAAI;AACN,mBAAAA,OAAAA,UAAU,SAAS,IAAI;AAAA,IACtC;AAAA,IAEA,UAAU;AACR,aAAO,QAAQ,IAAI;AACN,mBAAAA,OAAAA,UAAU,SAAS,IAAI;AAAA,IAAA;AAAA,EAExC;AACF;;"}